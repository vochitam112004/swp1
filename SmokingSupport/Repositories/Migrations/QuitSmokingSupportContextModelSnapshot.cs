// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSmokingSpport;

#nullable disable

namespace WebSmokingSpport.Migrations
{
    [DbContext(typeof(QuitSmokingSupportContext))]
    partial class QuitSmokingSupportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebSmokingSpport.Models.AdminProfile", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("admin_id");

                    b.Property<string>("PermissionLevel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("permission_level");

                    b.HasKey("AdminId")
                        .HasName("PK__AdminPro__43AA41410C9FD967");

                    b.ToTable("AdminProfile", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("appointment_id");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int")
                        .HasColumnName("coach_id");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.HasKey("AppointmentId")
                        .HasName("PK__Appointm__A50828FC397F9EE6");

                    b.HasIndex("CoachId");

                    b.HasIndex("MemberId");

                    b.ToTable("Appointment", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Badge", b =>
                {
                    b.Property<int>("BadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("badge_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BadgeId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("icon_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("BadgeId")
                        .HasName("PK__Badge__E79896563A608AAD");

                    b.ToTable("Badge", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.ChatMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("is_read");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiver_id");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime")
                        .HasColumnName("sent_at");

                    b.HasKey("MessageId")
                        .HasName("PK__ChatMess__0BBF6EE6E8C99D4E");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessage", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.CoachProfile", b =>
                {
                    b.Property<int>("CoachId")
                        .HasColumnType("int")
                        .HasColumnName("coach_id");

                    b.Property<string>("Specialization")
                        .HasColumnType("text")
                        .HasColumnName("specialization");

                    b.HasKey("CoachId")
                        .HasName("PK__CoachPro__2BEBE0446593A253");

                    b.ToTable("CoachProfile", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.CommunityInteraction", b =>
                {
                    b.Property<int>("InteractionId")
                        .HasColumnType("int")
                        .HasColumnName("interaction_id");

                    b.Property<string>("CommentContent")
                        .HasColumnType("text")
                        .HasColumnName("comment_content");

                    b.Property<DateTime?>("CommentedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("commented_at");

                    b.Property<int?>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("post_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("InteractionId")
                        .HasName("PK__Communit__605F8FE61AB23251");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("CommunityInteraction", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.CommunityPost", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("post_id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.HasKey("PostId")
                        .HasName("PK__Communit__3ED78766740666E6");

                    b.HasIndex("MemberId");

                    b.ToTable("CommunityPost", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .HasColumnType("int")
                        .HasColumnName("feedback_id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("submitted_at");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__7A6B2B8CF55D8B2F");

                    b.HasIndex("UserId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.GoalPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("plan_id");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("PersonalMotivation")
                        .HasColumnType("text")
                        .HasColumnName("personal_motivation");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<DateOnly?>("TargetQuitDate")
                        .HasColumnType("date")
                        .HasColumnName("target_quit_date");

                    b.Property<bool?>("UseTemplate")
                        .HasColumnType("bit")
                        .HasColumnName("use_template");

                    b.HasKey("PlanId")
                        .HasName("PK__GoalPlan__BE9F8F1DDA1BB507");

                    b.HasIndex("MemberId");

                    b.ToTable("GoalPlan", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.GoalTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .HasColumnType("int")
                        .HasColumnName("template_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.HasKey("TemplateId")
                        .HasName("PK__GoalTemp__BE44E0792304EE26");

                    b.ToTable("GoalTemplate", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.MemberGoal", b =>
                {
                    b.Property<int>("MemberGoalId")
                        .HasColumnType("int")
                        .HasColumnName("member_goal_id");

                    b.Property<int?>("GoalId")
                        .HasColumnType("int")
                        .HasColumnName("goal_id");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.HasKey("MemberGoalId")
                        .HasName("PK__MemberGo__378ADBCE73D40F33");

                    b.HasIndex("GoalId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberGoal", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.MemberProfile", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<int?>("ExperienceLevel")
                        .HasColumnType("int")
                        .HasColumnName("experience_level");

                    b.Property<string>("PreviousAttempts")
                        .HasColumnType("text")
                        .HasColumnName("previous_attempts");

                    b.Property<int?>("QuitAttempts")
                        .HasColumnType("int")
                        .HasColumnName("quit_attempts");

                    b.Property<string>("SmokingStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("smoking_status");

                    b.HasKey("MemberId")
                        .HasName("PK__MemberPr__B29B85346B6BE499");

                    b.ToTable("MemberProfile", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.MemberTrigger", b =>
                {
                    b.Property<int>("MemberTriggerId")
                        .HasColumnType("int")
                        .HasColumnName("member_trigger_id");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<int?>("TriggerId")
                        .HasColumnType("int")
                        .HasColumnName("trigger_id");

                    b.HasKey("MemberTriggerId")
                        .HasName("PK__MemberTr__7D57174CFAE3EE99");

                    b.HasIndex("MemberId");

                    b.HasIndex("TriggerId");

                    b.ToTable("MemberTrigger", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("is_read");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__E059842F75703874");

                    b.HasIndex("MemberId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.ProgressLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int>("CigarettesSmoked")
                        .HasColumnType("int")
                        .HasColumnName("cigarettes_smoked");

                    b.Property<DateOnly>("LogDate")
                        .HasColumnType("date")
                        .HasColumnName("log_date");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<int?>("MemberProfileMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Mood")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mood");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("Trigger")
                        .HasColumnType("text")
                        .HasColumnName("trigger");

                    b.HasKey("LogId")
                        .HasName("PK__Progress__9E2397E0E66BFCF8");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberProfileMemberId");

                    b.ToTable("ProgressLog", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Ranking", b =>
                {
                    b.Property<int>("RankingId")
                        .HasColumnType("int")
                        .HasColumnName("ranking_id");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated");

                    b.Property<int?>("Score")
                        .HasColumnType("int")
                        .HasColumnName("score");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("RankingId")
                        .HasName("PK__Ranking__95F5B23D5BE08871");

                    b.HasIndex("UserId");

                    b.ToTable("Ranking", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.SystemReport", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<string>("Details")
                        .HasColumnType("text")
                        .HasColumnName("details");

                    b.Property<string>("ReportType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("report_type");

                    b.Property<DateTime?>("ReportedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("reported_at");

                    b.Property<int?>("ReporterId")
                        .HasColumnType("int")
                        .HasColumnName("reporter_id");

                    b.HasKey("ReportId")
                        .HasName("PK__SystemRe__779B7C58BB933226");

                    b.HasIndex("ReporterId");

                    b.ToTable("SystemReport", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.TriggerFactor", b =>
                {
                    b.Property<int>("TriggerId")
                        .HasColumnType("int")
                        .HasColumnName("trigger_id");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("TriggerId")
                        .HasName("PK__TriggerF__23E04327247944B7");

                    b.ToTable("TriggerFactor", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar_url");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("display_name");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("user_type");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__User__B9BE370F799BEE66");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.UserBadge", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("BadgeId")
                        .HasColumnType("int")
                        .HasColumnName("badge_id");

                    b.Property<DateTime?>("EarnedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("earned_at");

                    b.HasKey("UserId", "BadgeId")
                        .HasName("PK__UserBadg__C7C7BE6AD6279876");

                    b.HasIndex("BadgeId");

                    b.ToTable("UserBadge", (string)null);
                });

            modelBuilder.Entity("WebSmokingSpport.Models.AdminProfile", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.User", "Admin")
                        .WithOne("AdminProfile")
                        .HasForeignKey("WebSmokingSpport.Models.AdminProfile", "AdminId")
                        .IsRequired()
                        .HasConstraintName("FK__AdminProf__admin__59FA5E80");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Appointment", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.CoachProfile", "Coach")
                        .WithMany("Appointments")
                        .HasForeignKey("CoachId")
                        .HasConstraintName("FK__Appointme__coach__44FF419A");

                    b.HasOne("WebSmokingSpport.Models.MemberProfile", "Member")
                        .WithMany("Appointments")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__Appointme__membe__440B1D61");

                    b.Navigation("Coach");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.ChatMessage", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.User", "Receiver")
                        .WithMany("ChatMessageReceivers")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__ChatMessa__recei__412EB0B6");

                    b.HasOne("WebSmokingSpport.Models.User", "Sender")
                        .WithMany("ChatMessageSenders")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK__ChatMessa__sende__403A8C7D");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.CoachProfile", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.User", "Coach")
                        .WithOne("CoachProfile")
                        .HasForeignKey("WebSmokingSpport.Models.CoachProfile", "CoachId")
                        .IsRequired()
                        .HasConstraintName("FK__CoachProf__coach__29572725");

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.CommunityInteraction", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.CommunityPost", "Post")
                        .WithMany("CommunityInteractions")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK__Community__post___4AB81AF0");

                    b.HasOne("WebSmokingSpport.Models.User", "User")
                        .WithMany("CommunityInteractions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Community__user___4BAC3F29");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.CommunityPost", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.MemberProfile", "Member")
                        .WithMany("CommunityPosts")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__Community__membe__47DBAE45");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Feedback", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Feedback__user_i__4E88ABD4");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.GoalPlan", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.MemberProfile", "Member")
                        .WithMany("GoalPlans")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__GoalPlan__member__2E1BDC42");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.MemberGoal", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.GoalPlan", "Goal")
                        .WithMany("MemberGoals")
                        .HasForeignKey("GoalId")
                        .HasConstraintName("FK__MemberGoa__goal___31EC6D26");

                    b.HasOne("WebSmokingSpport.Models.MemberProfile", "Member")
                        .WithMany("MemberGoals")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__MemberGoa__membe__30F848ED");

                    b.Navigation("Goal");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.MemberProfile", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.User", "Member")
                        .WithOne("MemberProfile")
                        .HasForeignKey("WebSmokingSpport.Models.MemberProfile", "MemberId")
                        .IsRequired()
                        .HasConstraintName("FK__MemberPro__membe__267ABA7A");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.MemberTrigger", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.MemberProfile", "Member")
                        .WithMany("MemberTriggers")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__MemberTri__membe__36B12243");

                    b.HasOne("WebSmokingSpport.Models.TriggerFactor", "Trigger")
                        .WithMany("MemberTriggers")
                        .HasForeignKey("TriggerId")
                        .HasConstraintName("FK__MemberTri__trigg__37A5467C");

                    b.Navigation("Member");

                    b.Navigation("Trigger");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Notification", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.MemberProfile", "Member")
                        .WithMany("Notifications")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__Notificat__membe__3D5E1FD2");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.ProgressLog", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.MemberProfile", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProgressLog_MemberProfile");

                    b.HasOne("WebSmokingSpport.Models.MemberProfile", null)
                        .WithMany("ProgressLogs")
                        .HasForeignKey("MemberProfileMemberId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Ranking", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.User", "User")
                        .WithMany("Rankings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Ranking__user_id__5165187F");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.SystemReport", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.User", "Reporter")
                        .WithMany("SystemReports")
                        .HasForeignKey("ReporterId")
                        .HasConstraintName("FK__SystemRep__repor__5CD6CB2B");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.UserBadge", b =>
                {
                    b.HasOne("WebSmokingSpport.Models.Badge", "Badge")
                        .WithMany("UserBadges")
                        .HasForeignKey("BadgeId")
                        .IsRequired()
                        .HasConstraintName("FK__UserBadge__badge__571DF1D5");

                    b.HasOne("WebSmokingSpport.Models.User", "User")
                        .WithMany("UserBadges")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserBadge__user___5629CD9C");

                    b.Navigation("Badge");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.Badge", b =>
                {
                    b.Navigation("UserBadges");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.CoachProfile", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.CommunityPost", b =>
                {
                    b.Navigation("CommunityInteractions");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.GoalPlan", b =>
                {
                    b.Navigation("MemberGoals");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.MemberProfile", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("CommunityPosts");

                    b.Navigation("GoalPlans");

                    b.Navigation("MemberGoals");

                    b.Navigation("MemberTriggers");

                    b.Navigation("Notifications");

                    b.Navigation("ProgressLogs");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.TriggerFactor", b =>
                {
                    b.Navigation("MemberTriggers");
                });

            modelBuilder.Entity("WebSmokingSpport.Models.User", b =>
                {
                    b.Navigation("AdminProfile");

                    b.Navigation("ChatMessageReceivers");

                    b.Navigation("ChatMessageSenders");

                    b.Navigation("CoachProfile");

                    b.Navigation("CommunityInteractions");

                    b.Navigation("Feedbacks");

                    b.Navigation("MemberProfile");

                    b.Navigation("Rankings");

                    b.Navigation("SystemReports");

                    b.Navigation("UserBadges");
                });
#pragma warning restore 612, 618
        }
    }
}
