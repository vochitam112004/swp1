// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSmokingSupport.Data;

#nullable disable

namespace WebSmokingSupport.Migrations
{
    [DbContext(typeof(QuitSmokingSupportContext))]
    [Migration("20250804175619_AddUserAchievementTable")]
    partial class AddUserAchievementTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Vietnamese_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebSmokingSupport.Entity.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("appointment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateOnly>("AppointmentDate")
                        .HasColumnType("date");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int")
                        .HasColumnName("coach_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<string>("MeetingLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("Notes")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId")
                        .HasName("PK__Appointm__A50828FC474C821E");

                    b.HasIndex("CoachId");

                    b.HasIndex("MemberId");

                    b.HasIndex("UserId");

                    b.ToTable("Appointment", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Badge", b =>
                {
                    b.Property<int>("BadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("badge_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BadgeId"));

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon_url");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("RequiredScore")
                        .HasColumnType("int");

                    b.HasKey("BadgeId")
                        .HasName("PK__Badge__E798965682E49E67");

                    b.ToTable("Badge", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.ChatMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Content")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("is_read");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiver_id");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime")
                        .HasColumnName("sent_at");

                    b.HasKey("MessageId")
                        .HasName("PK__ChatMess__0BBF6EE61D02029B");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessage", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.CoachProfile", b =>
                {
                    b.Property<int>("CoachId")
                        .HasColumnType("int")
                        .HasColumnName("coach_id");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Specialization")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("specialization");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CoachId")
                        .HasName("PK__CoachPro__2BEBE04471FE8045");

                    b.ToTable("CoachProfile", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.CommunityInteraction", b =>
                {
                    b.Property<int>("InteractionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("interaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InteractionId"));

                    b.Property<string>("CommentContent")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment_content");

                    b.Property<DateTime?>("CommentedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("commented_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("post_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<bool?>("isEdit")
                        .HasColumnType("bit");

                    b.HasKey("InteractionId")
                        .HasName("PK__Communit__605F8FE6B07CC6E6");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("CommunityInteraction", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.CommunityPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("post_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("Content")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("PostId")
                        .HasName("PK__Communit__3ED787661C66F607");

                    b.HasIndex("UserId");

                    b.ToTable("CommunityPost", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("feedback_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Content")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubmittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("submitted_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<bool?>("isType")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("bit")
                        .HasColumnName("is_type");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__7A6B2B8CCBD004F2");

                    b.HasIndex("UserId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.GoalPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("plan_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isCurrentGoal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_current_goal");

                    b.HasKey("PlanId")
                        .HasName("PK__GoalPlan__BE9F8F1D4063912B");

                    b.HasIndex("MemberId", "isCurrentGoal")
                        .IsUnique()
                        .HasFilter("[is_current_goal] = 1");

                    b.ToTable("GoalPlan", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.GoalPlanWeeklyReduction", b =>
                {
                    b.Property<int>("WeeklyReductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("weekly_reduction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeeklyReductionId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<int>("GoalPlanId")
                        .HasColumnType("int")
                        .HasColumnName("goal_plan_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int")
                        .HasColumnName("week_number");

                    b.Property<int>("totalCigarettes")
                        .HasColumnType("int")
                        .HasColumnName("total_cigarettes");

                    b.HasKey("WeeklyReductionId");

                    b.HasIndex("GoalPlanId");

                    b.ToTable("GoalPlanWeeklyReduction", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.MemberProfile", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<int>("CigarettesPerPack")
                        .HasColumnType("int");

                    b.Property<int?>("CigarettesSmoked")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExperienceLevel")
                        .HasColumnType("int");

                    b.Property<string>("PersonalMotivation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("personal_motivation");

                    b.Property<decimal>("PricePerPack")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price_per_pack");

                    b.Property<int?>("QuitAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("health")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("health");

                    b.HasKey("MemberId")
                        .HasName("PK__MemberPr__B29B85346E9D0FAF");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("MemberProfile", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.MemberTrigger", b =>
                {
                    b.Property<int>("MemberTriggerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("member_trigger_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberTriggerId"));

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<int?>("TriggerId")
                        .HasColumnType("int")
                        .HasColumnName("trigger_id");

                    b.HasKey("MemberTriggerId")
                        .HasName("PK__MemberTr__7D57174C98FECA46");

                    b.HasIndex("MemberId");

                    b.HasIndex("TriggerId");

                    b.ToTable("MemberTrigger", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.MembershipPlan", b =>
                {
                    b.Property<int?>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("plan_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PlanId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<int>("DurationDays")
                        .HasColumnType("int")
                        .HasColumnName("duration_days");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("PlanId");

                    b.ToTable("MembershipPlans");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit")
                        .HasColumnName("is_read");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__E059842F0C2FE15B");

                    b.HasIndex("MemberId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.PasswordResetToken", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("token_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TokenId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime")
                        .HasColumnName("expires_at");

                    b.Property<bool?>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_used");

                    b.Property<string>("OtpCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("TokenId")
                        .HasName("PK__Password__CB3C9E171E1B9166");

                    b.HasIndex("UserId");

                    b.ToTable("PasswordResetToken", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.ProgressLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int?>("CigarettesSmoked")
                        .HasColumnType("int")
                        .HasColumnName("cigarettes_smoked");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("GoalPlanId")
                        .HasColumnType("int")
                        .HasColumnName("goal_plan_id");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("date")
                        .HasColumnName("log_date");

                    b.Property<string>("Mood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<string>("Symptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Triggers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("LogId")
                        .HasName("PK__Progress__9E2397E0C035413C");

                    b.HasIndex("GoalPlanId");

                    b.ToTable("ProgressLog", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Ranking", b =>
                {
                    b.Property<int>("RankingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ranking_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RankingId"));

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated");

                    b.Property<int?>("Score")
                        .HasColumnType("int")
                        .HasColumnName("score");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("RankingId")
                        .HasName("PK__Ranking__95F5B23D7FEC028F");

                    b.HasIndex("UserId");

                    b.ToTable("Ranking", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.SystemReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("Details")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("ReportType")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("report_type");

                    b.Property<DateTime?>("ReportedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("reported_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ReporterId")
                        .HasColumnType("int")
                        .HasColumnName("reporter_id");

                    b.HasKey("ReportId")
                        .HasName("PK__SystemRe__779B7C58B194C859");

                    b.HasIndex("ReporterId");

                    b.ToTable("SystemReport", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.TriggerFactor", b =>
                {
                    b.Property<int>("TriggerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("trigger_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TriggerId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TriggerId")
                        .HasName("PK__TriggerF__23E043277F15F271");

                    b.ToTable("TriggerFactor", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar_url");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("display_name");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("user_type");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__User__B9BE370F04CCF52D");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.UserAchievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementId"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("SmokeFreeDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievements", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.UserBadge", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("BadgeId")
                        .HasColumnType("int")
                        .HasColumnName("badge_id");

                    b.Property<DateTime?>("EarnedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("earned_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserId", "BadgeId")
                        .HasName("PK__UserBadg__C7C7BE6AD71688B5");

                    b.HasIndex("BadgeId");

                    b.ToTable("UserBadge", (string)null);
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.UserMembershipHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMembershipHistories");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Appointment", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.CoachProfile", "Coach")
                        .WithMany("Appointments")
                        .HasForeignKey("CoachId")
                        .HasConstraintName("FK__Appointme__coach__47DBAE45");

                    b.HasOne("WebSmokingSupport.Entity.MemberProfile", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("WebSmokingSupport.Entity.User", null)
                        .WithMany("Appointments")
                        .HasForeignKey("UserId");

                    b.Navigation("Coach");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.ChatMessage", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "Receiver")
                        .WithMany("ChatMessageReceivers")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ChatMessa__recei__440B1D61");

                    b.HasOne("WebSmokingSupport.Entity.User", "Sender")
                        .WithMany("ChatMessageSenders")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__ChatMessa__sende__4316F928");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.CoachProfile", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "Coach")
                        .WithOne("CoachProfile")
                        .HasForeignKey("WebSmokingSupport.Entity.CoachProfile", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CoachProf__coach__2B3F6F97");

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.CommunityInteraction", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.CommunityPost", "Post")
                        .WithMany("CommunityInteractions")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Community__post___4F7CD00D");

                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithMany("CommunityInteractions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK__Community__user___5070F446");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.CommunityPost", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithMany("CommunityPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_CommunityPost_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Feedback", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Feedback__user_i__5441852A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.GoalPlan", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.MemberProfile", "Member")
                        .WithMany("GoalPlans")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.GoalPlanWeeklyReduction", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.GoalPlan", "GoalPlan")
                        .WithMany("GoalPlanWeeklyReductions")
                        .HasForeignKey("GoalPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GoalPlanWeeklyReduction_GoalPlan");

                    b.Navigation("GoalPlan");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.MemberProfile", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithOne("MemberProfile")
                        .HasForeignKey("WebSmokingSupport.Entity.MemberProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__MemberPro__user__286302EC");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.MemberTrigger", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.MemberProfile", "Member")
                        .WithMany("MemberTriggers")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__MemberTri__membe__38996AB5");

                    b.HasOne("WebSmokingSupport.Entity.TriggerFactor", "Trigger")
                        .WithMany("MemberTriggers")
                        .HasForeignKey("TriggerId")
                        .HasConstraintName("FK__MemberTri__trigg__398D8EEE");

                    b.Navigation("Member");

                    b.Navigation("Trigger");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Notification", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.MemberProfile", "Member")
                        .WithMany("Notifications")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__Notificat__membe__403A8C7D");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.PasswordResetToken", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithMany("PasswordResetTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PasswordR__user___693CA210");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.ProgressLog", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.GoalPlan", "GoalPlan")
                        .WithMany("ProgressLogs")
                        .HasForeignKey("GoalPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoalPlan");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Ranking", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithMany("Rankings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Ranking__user_id__571DF1D5");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.SystemReport", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "Reporter")
                        .WithMany("SystemReports")
                        .HasForeignKey("ReporterId")
                        .HasConstraintName("FK__SystemRep__repor__6477ECF3");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.UserAchievement", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.UserBadge", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.Badge", "Badge")
                        .WithMany("UserBadges")
                        .HasForeignKey("BadgeId")
                        .IsRequired()
                        .HasConstraintName("FK__UserBadge__badge__5DCAEF64");

                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithMany("UserBadges")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserBadge__user___5CD6CB2B");

                    b.Navigation("Badge");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.UserMembershipHistory", b =>
                {
                    b.HasOne("WebSmokingSupport.Entity.MembershipPlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WebSmokingSupport.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.Badge", b =>
                {
                    b.Navigation("UserBadges");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.CoachProfile", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.CommunityPost", b =>
                {
                    b.Navigation("CommunityInteractions");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.GoalPlan", b =>
                {
                    b.Navigation("GoalPlanWeeklyReductions");

                    b.Navigation("ProgressLogs");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.MemberProfile", b =>
                {
                    b.Navigation("GoalPlans");

                    b.Navigation("MemberTriggers");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.TriggerFactor", b =>
                {
                    b.Navigation("MemberTriggers");
                });

            modelBuilder.Entity("WebSmokingSupport.Entity.User", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("ChatMessageReceivers");

                    b.Navigation("ChatMessageSenders");

                    b.Navigation("CoachProfile");

                    b.Navigation("CommunityInteractions");

                    b.Navigation("CommunityPosts");

                    b.Navigation("Feedbacks");

                    b.Navigation("MemberProfile");

                    b.Navigation("PasswordResetTokens");

                    b.Navigation("Rankings");

                    b.Navigation("SystemReports");

                    b.Navigation("UserBadges");
                });
#pragma warning restore 612, 618
        }
    }
}
